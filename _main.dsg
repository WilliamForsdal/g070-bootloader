.cs_namespace    "Sandbox"
.include "_jabus_basic.dsg"
.include "_dsg_settings.dsg"

enum STARTUP_REASON(u16):
    COLD                0
    WATCHDOG_RESET      1
    SOFTWARE_RESET      2
    PIN_RESET           3

enum FATAL_ERROR_CODE(u32):
    NO_ERROR            0
    WATCHDOG_RESET      1

enum MAIN_STATE(u32):
    NORMAL_MODE         0
    CONFIG_MODE         1
    FATAL_ERROR         2

    STARTUP             10
    HARDFAULT           11


bitdef PROBE_OP_FLAGS(u16):
    IN_SMALL_BOOTLOADER 0       # in small bootloader
    IN_BIG_BOOTLOADER   1       # in big bootloader
    SETTINGS_WRITE_OK   2       # in allows settingswrite
    ROUTING_OK          3       # allows routing
    NORMAL_OP           4       # in normal operation
    FATAL_ERROR         5       # have fatal error
    HALF_DUPLEX         6       # this interface is half duplex, also means that ext_buf routing does not use flow ctrl too.
    RESTART_NEEDS_FF    7       # if restart, PC should send 0xFF on this interface to trigger the reply
    FLOW_CTRL           8       # if routing, we need flow-ctrl (not implemented well)

struct ProbeConstantData:
    .packed
    u8 jabus_hw_type                      # simplex/duplex/usb? etc
    u32 product_table_ptr                 # memory location where table def is.
    u16 product_table_size                # size of description table to efficiently read it back.
    u16 protocol_product_specific_type    # which cmds in cmd_type_product_specific are applicable.

# Bootloader cmds: id < 256

jabus_cmd Probe:
  id        0x0000
  request:
  answer:
    u8                          main_cpu_nr     # main CPU nr. Important when the first probe with dst=BROADCAST comes.
    bitdef PROBE_OP_FLAGS       op_flags        #: u16, bitdef PROBE_OP_FLAGS
    struct ProbeConstantData    cdata

jabus_cmd NOK:
  id    0x0002
  request:
  answer:
    u16 the_bad_cmd
    i32 error_code
    u32 info

jabus_cmd Echo:
  id    0x0004
  request:
    u8  data[4]
  answer:
    u8  data[4]

jabus_cmd EchoExt:
  id    0x0006
  request_extended:
  answer_extended:
  
enum RESET_MODE(u32):
  NORMAL_OP_MODE   0x4db552ca
  BOOTLOADER_MODE  0xbdf37d8c

jabus_cmd Reset:
  id    0x0008
  request:
    u32 reset_mode_magic
  answer:
    u32 reset_mode_magic
    u32 reset_counter

jabus_cmd ReadMem:
  id   0x000A
  cmd_type cmd_type_memory
  request:
    u32 addr
    u16 length
  answer_extended:

jabus_cmd WriteMem:
  id   0x000C
  cmd_type cmd_type_memory
  request_extended:
  answer:

jabus_cmd GetSettingsInfo:
  id   0x0010
  request:
  answer:
    u32 num_settings

jabus_cmd ReadSettingsBlock:
  id   0x0012
  request:
    u32 block_index
  answer_extended:
    u32 block_index

jabus_cmd GetExtbufInfo:
  id    0x0018
  request:
  answer:
    u32  buf_ptr
    u32  buf_len

struct LinkerSymbols:
  ptr32 u32 text_start
  ptr32 u32 text_end
  ptr32 u32 ram_data_start
  ptr32 u32 ram_data_end
  ptr32 u32 bss_start
  ptr32 u32 bss_end
  ptr32 u32 persistant_ram_start
  ptr32 u32 persistant_ram_end
  ptr32 u32 extbuf_start
  ptr32 u32 extbuf_end
  u32 extbuf_size

jabus_cmd GetLinkerSymbols:
  id 0x001A
  request:
  answer:
    struct LinkerSymbols linker_symbols
    
jabus_cmd JumpToMem:
  id 0x001C
  request:
    u32 addr
    i32 arg0
    i32 arg1
  answer:
    i32 result

jabus_cmd GetFuncPtr:
  id 0x001E
  request:
  answer:
    u32 func